<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        >

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <TextView
                android:id="@+id/textView1"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Canvas对绘制的辅助包括范围裁切和几何变换:"
                android:textColor="@color/colorPrimaryDark"
                android:textSize="25sp"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toTopOf="parent"
                />

            <TextView
                android:id="@+id/textView2"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="范围裁切有两个方法： clipRect() 和 clipPath()。裁切方法之后的绘制代码，都会被限制在裁切范围内,记得要加上 Canvas.save() 和 Canvas.restore() 来及时恢复绘制范围,不然后面的继续的裁剪只能在此基础上裁剪了"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@id/textView1"
                />

            <com.hxzk.customview.canvas.weigth.ClipRectView
                android:id="@+id/clipRectView"
                android:layout_width="match_parent"
                android:layout_height="80dp"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@id/textView2"/>

            <com.hxzk.customview.canvas.weigth.ClipPathView
                android:id="@+id/clipPathView"
                android:layout_width="match_parent"
                android:layout_height="80dp"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@id/clipRectView"/>

            <TextView
                android:id="@+id/textView3"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="几何变换的使用大概分为三类/n 使用 Canvas 来做常见的二维变换；/n使用 Matrix 来做常见和不常见的二维变换./n使用 Camera 来做三维变换。"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@id/clipPathView"/>
            <ImageView
                android:id="@+id/imageview1"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:src="@drawable/gaoxiao"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@id/textView3"/>
            <com.hxzk.customview.canvas.weigth.TranslateView
                android:id="@+id/transition"
                android:layout_width="match_parent"
                android:layout_height="130dp"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@id/imageview1"/>
            <com.hxzk.customview.canvas.weigth.Canvas_Rotate
                android:id="@+id/rotate"
                android:layout_width="match_parent"
                android:layout_height="130dp"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@id/transition"/>
            <com.hxzk.customview.canvas.weigth.Canvas_ScaleView
                android:id="@+id/scaleview"
                android:layout_width="match_parent"
                android:layout_height="150dp"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@id/rotate"/>
        </LinearLayout>
    </ScrollView>
</android.support.constraint.ConstraintLayout>